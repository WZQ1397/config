#各个配置项查询链接：https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/files/gitlab-config-template/gitlab.rb.template
version: '2'
services:
  gitlab:
    image: 'gitlab/gitlab-ce:10.4.3-ce.0'
    container_name: gitlab
    restart: always
    hostname: 'tfss'
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://192.168.14.6'
        #如果您需要使用非默认（443）的HTTPS端口，只需将其指定为external_url的一部分即可。
        #external_url "https://gitlab.example.com:2443"

        #将所有HTTP流量重定向到HTTPS
        nginx['redirect_http_to_https'] = true

        #配置ssl证书，tfss.me为你的域名
        nginx['ssl_certificate'] = "/etc/gitlab/ssl/tfss.me.cer"
        nginx['ssl_certificate_key'] = "/etc/gitlab/ssl/tfss.me.key"

        #默认情况下，NGINX和GitLab将记录连接客户端的IP地址。
        #如果您的GitLab位于反向代理之后，您可能不希望代理的IP地址显示为客户端地址。
        #您可以通过将您的反向代理添加到real_ip_trusted_addresses列表中来让NGINX查找不同的地址：
        #nginx['real_ip_trusted_addresses'] = [ '192.168.1.0/24', '192.168.2.1', '2001:0db8::/32' ]
        nginx['real_ip_header'] = 'X-Real-IP'
        nginx['real_ip_recursive'] = 'on'

        #默认情况下，NGINX将侦听指定的端口external_url或隐式使用正确的端口（80代表HTTP，443代表HTTPS）。
        #如果您在反向代理的后面运行GitLab，则可能需要将监听端口覆盖为其他内容。例如，要使用端口8081：
        nginx['listen_port'] = 8081

        #nginx['listen_https'] = false

        #gitlab_rails['ldap_enabled'] = true
        #gitlab_rails['ldap_servers'] = YAML.load <<-EOS # remember to close this block with 'EOS' below
        #main: # 'main' is the GitLab 'provider ID' of this LDAP server
        #  ## label
        #  #
        #  # A human-friendly name for your LDAP server. It is OK to change the label later,
        #  # for instance if you find out it is too large to fit on the web page.
        #  #
        #  # Example: 'Paris' or 'Acme, Ltd.'
        #  label: 'LDAP'

        #  host: 'mail.tfss.me'
        #  port: 389 # or 636
        #  uid: 'uid'
        #  method: 'plain' # "tls" or "ssl" or "plain"
        #  bind_dn: 'uid=zimbra,cn=admins,cn=zimbra'
        #  password: 'PASSWORD'

        #  # This setting specifies if LDAP server is Active Directory LDAP server.
        #  # For non AD servers it skips the AD specific queries.
        #  # If your LDAP server is not AD, set this to false.
        #  active_directory: true

        #  # If allow_username_or_email_login is enabled, GitLab will ignore everything
        #  # after the first '@' in the LDAP username submitted by the user on login.
        #  #
        #  # Example:
        #  # - the user enters 'jane.doe@example.com' and 'p@ssw0rd' as LDAP credentials;
        #  # - GitLab queries the LDAP server with 'jane.doe' and 'p@ssw0rd'.
        #  #
        #  # If you are using "uid: 'userPrincipalName'" on ActiveDirectory you need to
        #  # disable this setting, because the userPrincipalName contains an '@'.
        #  allow_username_or_email_login: true

        #  # Base where we can search for users
        #  #
        #  #   Ex. ou=People,dc=gitlab,dc=example
        #  #
        #  base: ''

        #  # Filter LDAP users
        #  #
        #  #   Format: RFC 4515 http://tools.ietf.org/search/rfc4515
        #  #   Ex. (employeeType=developer)
        #  #
        #  #   Note: GitLab does not support omniauth-ldap's custom filter syntax.
        #  #
        #  user_filter: ''
        #EOS

        gitlab_rails['log_directory'] = "/var/log/gitlab/gitlab-rails"
        unicorn['log_directory'] = "/var/log/gitlab/unicorn"
        registry['log_directory'] = "/var/log/gitlab/registry"
        # Below are some of the default settings
        logging['logrotate_frequency'] = "daily" # rotate logs daily
        logging['logrotate_size'] = nil # do not rotate by size by default
        logging['logrotate_rotate'] = 30 # keep 30 rotated logs
        logging['logrotate_compress'] = "compress" # see 'man logrotate'
        logging['logrotate_method'] = "copytruncate" # see 'man logrotate'
        logging['logrotate_postrotate'] = nil # no postrotate command by default
        logging['logrotate_dateformat'] = nil # use date extensions for rotated files rather than numbers e.g. a value of "-%Y-%m-%d" would give rotated files like p
        # You can add overrides per service
        nginx['logrotate_frequency'] = nil
        nginx['logrotate_size'] = "200M"
        # You can also disable the built-in logrotate service if you want
        logrotate['enable'] = false
        gitlab_rails['smtp_enable'] = true
        gitlab_rails['smtp_address'] = "mail.tfss.me"
        gitlab_rails['smtp_port'] = 25
        gitlab_rails['smtp_user_name'] = "no-reply@tfss.me"
        gitlab_rails['smtp_password'] = "PASSWORD"
        gitlab_rails['smtp_domain'] = "tfss.me"
        gitlab_rails['smtp_authentication'] = "login"
        gitlab_rails['smtp_enable_starttls_auto'] = true
        gitlab_rails['smtp_openssl_verify_mode'] = 'peer'

        # If your SMTP server does not like the default 'From: gitlab@localhost' you
        # can change the 'From' with this setting.
        gitlab_rails['gitlab_email_from'] = 'gitlab@tfss.me'
        gitlab_rails['gitlab_email_reply_to'] = 'no-reply@tfss.me'
        gitlab_rails['initial_root_password'] = 'PASSWORD'
        gitlab_rails['initial_shared_runners_registration_token'] = "iuLaUhGZYyFgTxAyZ6HbdFUZ"
#    networks:
#      macvlan:
#        ipv4_address: 172.16.0.70
    ports:
      - '80:80'
      - '443:443'
      - '2222:22'
    volumes:
      - config:/etc/gitlab
      - logs:/var/log/gitlab
      - data:/var/opt/gitlab

#networks:
#  macvlan:
#    driver: macvlan
#    driver_opts:
#      parent: ens18
#    ipam:
#      config:
#      - subnet: 172.16.0.0/19

volumes:
  config:
  logs:
  data:
