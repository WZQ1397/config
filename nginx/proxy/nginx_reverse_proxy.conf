http{
    # 设置缓存文件目录变量
    set $proxy_cache_dir /tmp/ngx_proxy_cache;

    # levels 设置在相对path路径的第几级hash目录中缓存数据。levels=1，表示一级hash目录；levels=1:2，表示两级，依次类推
		# key_zone   在共享内存中设置一块存储区域来存放缓存的key和metadata,用来快速判断请求是否命中缓存，1m可以存储8000个key
    # max_size  最大cache空间，默认无限制，当达到配额后，会删除最少使用的cache文件
    # inactive  未被访问文件在缓存中保留时间
    # use_temp_path 如果为off，缓存文件直接写入指定的cache文件中，建议为off，避免文件在不同文件系统中不必要的拷贝
    proxy_cache_path $proxy_cache_dir levels=1:4 keys_zone=zach_cache_rev_server:10m inactive=1h max_size=10g use_tmp_path=off;

    # proxy_temp_path和proxy_cache_path指定的路径必须在同一分区
    proxy_temp_path $proxy_cache_dir;
    proxy_max_temp_file_size 1024m;
    proxy_temp_file_write_size 8k|16k;

    server {
        location ^~ / {
            proxy_pass http://54.223.183.130:10080/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # 开启缓存功能
            proxy_cache zach_cache_rev_server;                  # 缓存键空间名
            proxy_cache_valid 200 304 12h;                      # 指定对应状态码的缓存时间
            proxy_cache_valid 301 302 1m;
            proxy_cache_valid any 1m;
            expires 1d;                                         # 默认全局超时时间

            proxy_cache_key $host-$uri-$is_args$args;           # 指定键key的格式
            proxy_max_temp_file_size 10m;                       
            proxy_cache_min_uses 5;                             # 最少访问5次后放入缓存
            # 当nginx服务器访问被代理服务器时出现问题时。nginx服务器可以使用历史缓存响应客户端的请求
            proxy_cache_use_stale timeout http_500 | http_502 | http_503 | http_504;

            proxy_redirect off;                                 # 关闭重定向
            proxy_ignore_headers Set-Cookie X-Accel-Expires;    # 忽略以下头部

        };
        # 172.16.48.0/22 网段可以清除cache
        location /purge_cache(/.*) {
            allow 172.16.48.0/22;
            deny all;
            proxy_cache_purge zach_cache_rev_server $host-$1-$is_args$args;
        }
    }
};