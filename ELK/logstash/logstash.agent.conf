input {

	file  {
           type => "online-entry-sit"
            path => [ "/data/tsjinrong/logs/onlineCreditEntry/onlineCreditEntry.log" ]
            tags => [ "online-entry-sit", "logback" ]
         codec => multiline {
              pattern => "^%{TIMESTAMP_ISO8601}"
              negate => true
              what => "previous"
          }
    }
		  
	file  {
           type => "online-esb-sit"
            path => [ "/data/tsjinrong/logs/onlineCreditEsb/onlineCreditEsb.log" ]
            tags => [ "online-esb-sit", "logback" ]
         codec => multiline {
              pattern => "^%{TIMESTAMP_ISO8601}"
              negate => true
              what => "previous"
          }
     }
		  
		  
    

}

filter {
           grok {
            match => { "message" => 
                "%{TIMESTAMP_ISO8601:date}\s+\[(?<thread_name>.+)\]\s+(?<log_level>\w+)\s+(?<codeline>[^ \f\n\r\t\v\.]+(\.[^ \f\n\r\t\v\.]+)+\s\[\S+\])\s+-\s*(?<content>.+)"
            }
        }

        if [log_level] == "ERROR" and "Invalid password for user" not in [content] {
            throttle {
                after_count => 2
                key => "%{content}"
                add_tag => "throttled"
            }
        }
		date{
			match=>["date","yyyy-MM-dd HH:mm:ss,SSS"]
			target=>"@timestamp"
			remove_field=>"date"
		}
		mutate{
			remove_field => "message"
		}
}
     
output {
         redis {
         host => "192.168.33.151"
         #port => "6379"
         data_type =>"list"
         key => "approval-sit"
     }
}

